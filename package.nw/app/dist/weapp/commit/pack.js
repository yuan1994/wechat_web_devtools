'use strict';var _exports;function init(){const a=require('glob'),b=require('fs'),c=require('path'),d=require('../../common/log/log.js');_exports=(e,f,g)=>{var h=[new Buffer(1),new Buffer(4),new Buffer(4),new Buffer(4),new Buffer(1)];h[0].writeIntLE(190),h[1].writeInt32BE(1),h[4].writeIntLE(237);let i=0,j=[],k=[],l=[],m=[],n=[];a(`${e}/**`,{nodir:!0},(o,p)=>{if(!o){i=p.length,p.forEach(t=>{let u=b.readFileSync(t),v=c.relative(e,t),w=new Buffer(`/${v.replace(/\\/g,'/')}`);l.push(w),m.push(u)});let q=18+12*i+Buffer.concat(l).length;k=l.map((t,u)=>{let v=new Buffer(4);v.writeInt32BE(t.length);let w=new Buffer(4),x=m[u].length,y=q;w.writeInt32BE(y),q+=x;let z=new Buffer(4);return z.writeInt32BE(x),Buffer.concat([v,t,w,z])});let r=new Buffer(4);r.writeInt32BE(i),k.unshift(r),j=Buffer.concat(k),n=Buffer.concat(m),h[2].writeInt32BE(j.length),h[3].writeInt32BE(n.length),h=Buffer.concat(h);let s=Buffer.concat([h,j,n]);b.writeFileSync(f,s),d.info(`pack.js create ${f} success!`),g(null,f)}else d.error(o)})}}init(),module.exports=_exports;