'use strict';var _exports;function init(){function a(E){s.notifications({title:`有新版本`,message:`新版本 ${E} 已经准备好，立刻重启更新？`,buttons:[{title:'\u91CD\u542F'}]},F=>{0===F&&(o.unRegister(),chrome.runtime.reload())})}function b(E){function F(){s.notifications({title:`有新版本`,message:`新版本 ${E} 已经准备好，立刻重启安装？`,buttons:[{title:'\u5B89\u88C5\u65B0\u7248\u672C'}]},M=>{if(0===M){let N=t?'open':K,O=t?[K]:[];m(N,O,{detached:!0,cwd:w}),nw.App.quit()}})}let G=t?'darwin':'x64'===process.arch?'x64':'ia32',H=`${u}&type=${G}`,I={url:H},J=n.getProxyForURL(H);'DIRECT'!==J&&(I.proxy='http://'+J.replace('PROXY ',''));let K=`${G}_${E}.${t?'.dmg':'.exe'}`,L=i.join(w,K);j.existsSync(L)?F():x(I,(M,N,O)=>{M||F()}).pipe(j.createWriteStream(L))}function c(E,F){if(clearInterval(y),'app'===F||'big_code'===F)return void b(E);let G=i.join(w,`${F}${E}`);if(j.existsSync(G))return g.info(`checkUp.js ${G} is existsSync`),localStorage.setItem('new-version',E),void a(E);let H=[];H.push(function(J){let K={url:`${u}&type=${F}`,needToken:0,encoding:null};g.info(`checkUp.js begin fetch new version ${K.url}`),f(K,(L,M,N)=>{J(L,N)})}),H.push(function(J,K){l.gunzip(J,(L,M)=>{K(L,M)})}),H.push(function(J,K){j.writeFile(G,J,L=>{K(L,G)})}),H.push(function(J,K){let L=i.join(w,E.toString());k.sync(L);let M=t?i.join(L,'app.nw'):i.join(L,'package.nw');h.extractAll(J,M);let N=i.join(M,'package.json'),O=JSON.parse(j.readFileSync(N,'utf8'));t?(O.window.frame=!0,O['chromium-args']='-ignore-certificate-errors -load-extension=/Applications/wechatwebdevtools.app/Contents/Resources/app.nw/app/dist/extensions/'):O['chromium-args']='-ignore-certificate-errors -load-extension=./package.nw/app/dist/extensions/',j.writeFileSync(N,JSON.stringify(O),'utf8'),localStorage.setItem('new-version',E),K(null,E)}),p.waterfall(H,(I,J)=>{return I?void g.error(`checkUp.js async.waterfall ${I.toString()}`):void a(J)})}function d(E){let F=E.split('.'),G=parseInt(F[0]),H=parseInt(F[1]),I=parseInt(F[2]);if(G>B)return'app';return H>C?'big_code':!!(I>D)&&'small_code'}function e(E){let F=d(E.last_ide);F?(g.info(`checkUp.js find new version ${E.last_ide} and current version is ${z}`),c(E.last_ide,F)):(y&&clearInterval(y),y=setInterval(()=>{let G={method:'post',url:`${q.LOADCONFIG_URL}?type=checkup`,needToken:0,body:JSON.stringify({type:7,version:nw.App.manifest.version})};f(G,(H,I,J)=>{if(!H){let K=JSON.parse(J),L=K.client_list,M={};L.forEach(O=>{M[O.key]=O.value}),e(M),r.check(M);let N=K.notice_list;N&&0<N.length&&s.handleNotificationList(N)}else g.info(`checkUp.js onLineCheck error: ${H.toString()}`)})},600000))}const f=require('../common/request/request.js'),g=require('../common/log/log.js'),h=require('asar'),i=require('path'),j=require('fs'),k=require('mkdir-p'),l=require('zlib');require('rmdir');const m=require('child_process').spawn,n=require('./tools.js'),o=require('../common/shortCut/shortCut.js');l.createGunzip();const p=require('async'),q=require('../config/urlConfig.js'),r=require('../weapp/utils/vendorManager.js'),s=require('./notifyManager.js'),t='darwin'===process.platform,u=q.downloadRedirectURL+(t?'?os=darwin':'?os=win');global.appVersion,nw.App.getDataPath(),q.LOADCONFIG_URL;const v=require('../config/dirConfig.js'),w=v.WeappApplication;i.join(w,'uplog.json');const x=require('request');var y;const z=global.appVersion,A=z.split('.'),B=parseInt(A[0]),C=parseInt(A[1]),D=parseInt(A[2]);_exports=E=>{global.appConfig.isDev||(e(E),r.check(E))}}init(),module.exports=_exports;